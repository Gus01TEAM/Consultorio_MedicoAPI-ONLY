@page "/create-patient"

@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.Forms;
@using System.ComponentModel.DataAnnotations;
@using Consultorio_Medico.BL.DTOs.PatientDTO;
@using Consultorio_Medico.Blazor.Data;

<h3>@language.Traduction("Crear Nuevo Paciente", " Create Patient")</h3>
@if (isSuccess == false && isError == false)
{
    <EditForm Model="patient" OnValidSubmit="@Create">
        <div class="row">
            <RadzenFormField Text="@(language.Traduction("Nombre", "Name"))" Style="width: 50%" Variant="@variant">
                <RadzenTextBox @bind-Value="patient.Name" />
            </RadzenFormField>
        </div>
        <div class="row">
            <RadzenFormField Text="@(language.Traduction("Apellido", "Last Name"))" Style="width: 50%" Variant="@variant">
                <RadzenTextBox @bind-Value="patient.LastName" />
            </RadzenFormField>
        </div>
        <div class="row">
            <RadzenFormField Text="@(language.Traduction("Telefono", "Phone Number"))" Style="width: 50%" Variant="@variant">
                <RadzenTextBox @bind-Value="patient.Telefono" />
            </RadzenFormField>
        </div>
        <div class="row">
            <RadzenFormField Text="DUI" Style="width: 50%" Variant="@variant">
                <RadzenTextBox @bind-Value="patient.DUI" />
            </RadzenFormField>
        </div>

        <div class="row">
            <div class="col-12">
                <RadzenButton ButtonType="ButtonType.Submit" Text="@(language.Traduction("Guardar", "Save"))" Icon="check_circle" Style="margin-top: 10px"></RadzenButton>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                <RadzenButton Text="@(language.Traduction("Cancelar", "Cancel"))" ButtonStyle="ButtonStyle.Danger" Icon="cancel" Style="margin-top: 10px" Click="@Cancel"></RadzenButton>
            </div>
        </div>
    </EditForm> 
}
else if (isSuccess)
{
    patient = new patientAddDTO();

    isError = false;
    <RadzenAlert Variant="Variant.Filled" AlertStyle="AlertStyle.Success" Size="AlertSize.Medium" Shade="Shade.Light" AllowClose=false>
        @(language.Traduction("¡El Paciente se creó con éxito!", "Patient created successfully!"))      
    </RadzenAlert>
    <RadzenButton Text="@(language.Traduction("Seguir Creando", "Go to Create"))" Icon="check_circle" Style="margin-top: 10px" Click="@GoCreate"></RadzenButton>
    <RadzenButton Text="@(language.Traduction("Regresar a la Lista", "Return to List"))" ButtonStyle="ButtonStyle.Secondary" Icon="cancel" Style="margin-top: 10px" Click="@Cancel"></RadzenButton>
}
else if (isError)
{
    <RadzenAlert Variant="Variant.Filled" AlertStyle="AlertStyle.Danger" Size="AlertSize.Medium" Shade="Shade.Dark" AllowClose=false>
        @(language.Traduction("Ocurrió un error al intentar crear el registro.", "An error occurred while trying to register."))     
    </RadzenAlert>
    <RadzenButton Text="@(language.Traduction("Aceptar", "Accept"))" ButtonStyle="ButtonStyle.Secondary" Style="margin-top: 10px" Click="@Cancel"></RadzenButton>
}


@code {

    [Inject]
    NavigationManager navigation { get; set; }

    [Inject]
    PatientService patientService { get; set; }

    [Inject]
    LanguageService language { get; set; }

    patientAddDTO patient = new patientAddDTO();

    bool isSuccess = false;
    bool isError = false;

    Variant variant = Variant.Outlined;

    private async Task Create()
    {
        var result = await patientService.Create(patient);
        if (result != null)
            isSuccess = true;
        else
            isError = true;
    }

    private void GoCreate()
    {
        isSuccess = false;
        isError = false;
    }

    private void Cancel()
    {
        navigation.NavigateTo("/patients");
    }
}
