@page "/delete-patient/{Id:int}"

@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.Forms;
@using System.ComponentModel.DataAnnotations;
@using Consultorio_Medico.BL.DTOs.PatientDTO;
@using Consultorio_Medico.Blazor.Data;

<h3>DeletePatient</h3>
@if (isSuccess == false && isError == false)
{
    <div class="row">
        <RadzenFormField Text="Name" Style="width: 50%" Variant="@variant">
            <RadzenTextBox @bind-Value="patient.Name" ReadOnly="true" />
        </RadzenFormField>
    </div>
    <br />
    <div class="row">
        <RadzenFormField Text="Last Name" Style="width: 50%" Variant="@variant">
            <RadzenTextBox @bind-Value="patient.LastName" ReadOnly="true" />
        </RadzenFormField>
    </div>
    <br />
    <div class="row">
        <RadzenFormField Text="Phone" Style="width: 50%" Variant="@variant">
            <RadzenTextBox @bind-Value="patient.Telefono" ReadOnly="true" />
        </RadzenFormField>
    </div>
    <br />
    <div class="row">
        <RadzenFormField Text="DUI" Style="width: 50%" Variant="@variant">
            <RadzenTextBox @bind-Value="patient.DUI" ReadOnly="true" />
        </RadzenFormField>
    </div>

    <div class="row">
        <div class="col-12">
            <RadzenButton Text="Delete Patient" Icon="delete" ButtonStyle="ButtonStyle.Danger" Style="margin-top: 10px" Click="@Delete"></RadzenButton>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <RadzenButton Text="Cancel" ButtonStyle="ButtonStyle.Info" Icon="cancel" Style="margin-top: 10px" Click="@Cancel"></RadzenButton>
        </div>
    </div>

}
else if (isSuccess)
{
        <RadzenAlert Variant="Variant.Filled" AlertStyle="AlertStyle.Success" Size="AlertSize.Medium" Shade="Shade.Light" AllowClose=false>
            The patient was successfully deleted!
        </RadzenAlert>
        <RadzenButton Text="Return to List" ButtonStyle="ButtonStyle.Primary" Icon="check_circle" Style="margin-top: 10px" Click="@Cancel"></RadzenButton>
}
else if (isError)
{
        <RadzenAlert Variant="Variant.Filled" AlertStyle="AlertStyle.Danger" Size="AlertSize.Medium" Shade="Shade.Dark" AllowClose=false>
            An error occurred while trying to delete.
        </RadzenAlert>
        <RadzenButton Text="Accept" ButtonStyle="ButtonStyle.Secondary" Style="margin-top: 10px" Click="@Cancel"></RadzenButton>
}

@code {

    [Parameter]
    public int Id { get; set; }

    [Inject]
    NavigationManager navigation { get; set; }

    [Inject]
    PatientService patientService { get; set; }

    patientSearchOutputDTO patient = new patientSearchOutputDTO();

    Variant variant = Variant.Outlined;

    bool isSuccess = false;
    bool isError = false;

    bool disabled = true;

    protected override async Task OnInitializedAsync()
    {
        var rolResult = await patientService.GetById(Id);
        patient = rolResult.Data;
    }

    private async Task Delete()
    {
        var result = await patientService.Delete(patient.patientId);

        if (result != null)
            isSuccess = true;
        else
            isError = true;
    }

    private void Cancel()
    {
        navigation.NavigateTo("/patients");
    }
}
