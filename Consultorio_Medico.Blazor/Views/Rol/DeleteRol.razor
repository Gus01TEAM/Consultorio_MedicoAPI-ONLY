@page "/delete-rol/{Id:int}"

@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.Forms;
@using System.ComponentModel.DataAnnotations;
@using Consultorio_Medico.Blazor.Data;
@using Consultorio_Medico.BL.DTOs.RolDTO;


<h3>@language.Traduction("¿Eliminar Rol?", "Delete Role?")</h3>
*@if (isSuccess == false && isError == false)
{

    <div class="row">
        <RadzenFormField Text="@(language.Traduction("Nombre", "Name"))" Style="width: 50%" Variant="@variant">
            <RadzenTextBox @bind-Value="rol.Name" ReadOnly="true" />
        </RadzenFormField>
    </div>

    <br>
    <RadzenDropDown Placeholder="@(language.Traduction("Estado", "Status"))" @bind-Value="rol.Status" Data="GetStatusOptions()" Disabled="@disabled" TextProperty="Text" ValueProperty="Value" Style="width: 50%">
    </RadzenDropDown>


    <div class="row">
        <div class="col-12">
            <RadzenButton Text="@(language.Traduction("Eliminar", "Delete"))" Icon="delete" ButtonStyle="ButtonStyle.Danger" Style="margin-top: 10px" Click="@Delete"></RadzenButton>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <RadzenButton Text="@(language.Traduction("Cancelar", "Cancel"))" ButtonStyle="ButtonStyle.Info" Icon="cancel" Style="margin-top: 10px" Click="@Cancel"></RadzenButton>
        </div>
    </div>
}


else if (isSuccess)
{
    <RadzenAlert Variant="Variant.Filled" AlertStyle="AlertStyle.Success" Size="AlertSize.Medium" Shade="Shade.Light" AllowClose=false>
        @(language.Traduction("¡El Rol eliminado con éxito!", "Role was successfully deleted!"))
        
    </RadzenAlert>
    <RadzenButton Text="@(language.Traduction("Regresar a la Lista", "Return to List"))" ButtonStyle="ButtonStyle.Primary" Icon="check_circle" Style="margin-top: 10px" Click="@Cancel"></RadzenButton>
}
else if (isError)
{
    <RadzenAlert Variant="Variant.Filled" AlertStyle="AlertStyle.Danger" Size="AlertSize.Medium" Shade="Shade.Dark" AllowClose=false>
        @(language.Traduction("Ocurrió un error al intentar eliminar el rol.", "An error occurred while trying to delete."))
        
    </RadzenAlert>
    <RadzenButton Text="@(language.Traduction("Aceptar", "Accept"))" ButtonStyle="ButtonStyle.Secondary" Style="margin-top: 10px" Click="@Cancel"></RadzenButton>
}






@code {

    [Parameter]
    public int Id { get; set; }

    [Inject]
    NavigationManager navigation { get; set; }

    [Inject]
    RolService rolService { get; set; }

    [Inject]
    LanguageService language { get; set; }

    RolSearchingOutputDTO rol = new RolSearchingOutputDTO();

    bool disabled = true;
    bool isSuccess = false;
    bool isError = false;

    Variant variant = Variant.Outlined;

    protected override async Task OnInitializedAsync()
    {
        var rolResult = await rolService.GetById(Id);
        rol = rolResult.Data;
    }

    private async Task Delete()
    {
        var result = await rolService.Delete(rol.RolId);

        if (result != null)
            isSuccess = true;
        else
            isError = true;
    }

    IEnumerable<dynamic> GetStatusOptions()
    {
        yield return new { Text = "ACTIVO", Value = (byte)1 };
        yield return new { Text = "INACTIVO", Value = (byte)2 };
    }

    private void Cancel()
    {
        navigation.NavigateTo("/roles");
    }
}
