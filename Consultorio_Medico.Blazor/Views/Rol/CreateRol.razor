@page "/create-rol"

@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.Forms;
@using System.ComponentModel.DataAnnotations;
@using Consultorio_Medico.BL.DTOs.RolDTO;
@using Consultorio_Medico.Blazor.Data;

@if (isSuccess == false && isError == false)
{

    <EditForm Model="rolInput" OnValidSubmit="@Create">
        <h3>CREATE NEW ROLE</h3>

        <div class="row">
            <RadzenFormField Text="Name" Style="width: 50%" Variant="@variant">
                <RadzenTextBox @bind-Value="rolInput.Name" />
            </RadzenFormField>
        </div>
        <br>
        <RadzenDropDown Placeholder="Status" @bind-Value="rolInput.Status" Data="GetStatusOptions()" TextProperty="Text" ValueProperty="Value" Style="width: 50%">
        </RadzenDropDown>

        <div class="row">
            <div class="col-12">
                <RadzenButton ButtonType="ButtonType.Submit" Text="Save Rol" Icon="check_circle" Style="margin-top: 10px"></RadzenButton>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                <RadzenButton Text="Cancel" Style="margin-top: 10px" Click="@Cancel"></RadzenButton>
            </div>
        </div>
    </EditForm>

}
else if (isSuccess)
{
    rolInput = new RolInputDTO();

    isError = false;
    <p class="alert alert-success">Rol creado con éxito.</p>
    <button type="button" @onclick="GoCreate" class="btn btn-primary">Ir a Crear</button>
    <NavLink href="/roles" class="btn btn-primary">Ir a buscar personas</NavLink>
}
else if (isError)
{
    <p class="alert alert-success">Sucedio un error al intentar registrar</p>
    <NavLink href="/roles" class="btn btn-primary">Aceptar</NavLink>
}



@code {
    [Inject]
    NavigationManager navigation { get; set; }

    [Inject]
    RolService rolService { get; set; }

    RolInputDTO rolInput = new RolInputDTO();

    bool isSuccess = false;
    bool isError = false;

    Variant variant = Variant.Outlined;

    private async Task Create()
    {
        var result = await rolService.Create(rolInput);
        if (result != null)
            isSuccess = true;
        else
            isError = true;
    }

    private void GoCreate()
    {
        isSuccess = false;
        isError = false;
    }

    byte status = 0;

    private void HandleSelectChange(ChangeEventArgs e)
    {
        rolInput.Status = Convert.ToByte(e.Value.ToString());
    }

    IEnumerable<dynamic> GetStatusOptions()
    {
        yield return new { Text = "ACTIVO", Value = (byte)1 };
        yield return new { Text = "INACTIVO", Value = (byte)2 };
    }

    private void Cancel()
    {
        navigation.NavigateTo("/roles");
    }

}
